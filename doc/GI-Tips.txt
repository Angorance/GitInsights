- Trop/pas assez de mots dans les commits (médiane des mots)

	95-XX char: You're supposed to write a short description of the work that was done, not the complete report for the client nor an official mail to the intention of the head of the company. You have to be concise yet clear. We know it's a hard skill to master, but it's necessary to know then to stop in order to be the G.O.A.T. in commit message redaction.

	70-95 char: We see that you put some extra effort in your commit message redaction, that's cool and all, but maybe you're taking this "detailing" thing a bit too far. You and your colleagues will have to read those, so maybe try to ease off on the keyboard, and go get yourself a chocolate milk. You deserved it ;)

	50-70 char: Congratulation, fellow programmer. You now belong to the elite in term of writing a commit message. The bug fix description has no more secret to you. You can now wander in the vales of the Internet in order to spread the holy teaching. Keep your mind clear and your keys sharp. May the semi-colon be with you. Amen

	25-50 char: Hey not bad, you're doing pretty god ! But if you want to be the very best, like no one ever was, you still have to improve this legendary skill known as "write a good commit message". Maybe you were a bit vague in your message, or you missed a functionality/feature/fix/bug to comment. Keep on typing, you're close to excellence. #ThumbsUp

	00-25 char: Come on, you can and have to do longer commit messages. It's a description of your work, not a trivial text sent with your favorite messaging app. You don't have to write a book, but give as many informations as possible on what was done. Your team will be thankfull and they event might consider inviting you for a drink for being the "commit redactor of the year" :)

------------------------------------------------------------------------------------------------------------------
- Taille de commits (médiane)

	40-XX modif. : You love living dangerously... Making such big changes before committing can make you loose everything. Try making less changes per commit or making commits more often. Imagine a sunday afternoon, you, coding in front of your computer (behind it's way more difficult btw) and suddenly, after changing the core of your software, a T-Rex enters your room breaking your door with a high kick and eats your computer... No commit, no work done. Next time, you should commit more often, after little changes! :D

	25-40 modif. : c'est un peu risqué
	15-25 modif. : parfait
	10-15 modif. : la sûreté ça te connait

	00-10 modif. : What the Hell man? Even my Grandma makes more changes per commit... I don't even know what to say! I mean, making a commit per line is not that good... When your colleagues pull the changes, if they want to catch up and read the commits, they will be lost in miserable changes and a tsunami of commits... Not so productive :/

------------------------------------------------------------------------------------------------------------------
- Nbre de langages utilisé/masterisé (pourcentage d'utilisation des langages), nbre de langages pour arriver à 75%
	
	8-X langages : WOW, ok, you're curious, that's good, but you know it's a sin (not a big one though, but still) ? You're VERY versatile, but we doubt that you master every single language that you use. If that's the case, congratulation, you're the apex programmer. But otherwise you might consider reducing your arsenal in order to better use you weapons. Sure a Swiss Knife is useful, but you'll still use a kitchen knife to chop your vegetable.

	5-7 langages : You try to be verstile but man, maybe you should focus on a little less tools. It's good to know some languages, but it's way better to master a few languages. This way you'll have the knowledge to use a little bit of everything, mais you'll also be able to increase you productivity on the mastered tools. Your colleagues will even be impressed by how confident you'll look by smashing your keys frenetically, typing your bubble-sort method at the light of speed :)

	3-4 langages : Welp, what do you expect us to say ? You're pretty versatile as a programmer and you know what you're doing with your tools. That's a very appreciated set of skill that you have here. Try to keep using these languages as you need/want, but don't restrain yourself to use other languages.

	2   langages : Hey we see that you're the proud expert of two wonderful languages. That's quite good but you know, curiosity isn't that bad as a sin, you're not restricted to use these only two tools. Try to add one or two other languages to your arsenal to increase your versatility. This kind of skill is very appreciated on the job market. Think about a domain in which you have some interest, or something complementary to the two you already know :)

	1   langages : Most of your work is done with only one language, so there's two case possible : either you juste created your account and did a very few project with it, or you are an apex programmer in this particular language. In both case, we encourage you to try out new languages, maybe check out a domain in which you're curious/not comfortable yet. But try to spare some time to keep on practicing your favorite language :)
	
------------------------------------------------------------------------------------------------------------------
- Temps de fermeture d'une issue (médiane de la durée)

	26-XX jours : Wow man, how was your trip to the East Siberian Taiga ecoregion? I hope it was fun because now, it's time to GET BACK TO WORK. No, really, getting issues done taking so much time... Your "working" with Candy Crush or what? Even Shakespare resolves issues more quickly...

	10-25 jours : faudrait un peu se bouger le cul...
	3-9 jours : parfait, Bon rythme, continue comme ça
	0-2 jours  : calme-toi prend le temps de réfléchir (à moins que tu sois un génie)

